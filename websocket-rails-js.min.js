/*! websocket-rails-js 2015-07-27 */
(function(){WebSocketRails.AbstractConnection=function(){function a(a,b){this.dispatcher=b,this.message_queue=[]}return a.prototype.close=function(){},a.prototype.trigger=function(a){return"connected"!==this.dispatcher.state?this.message_queue.push(a):this.send_event(a)},a.prototype.send_event=function(a){return null!=this.connection_id?a.connection_id=this.connection_id:void 0},a.prototype.on_close=function(a){var b;return this.dispatcher&&this.dispatcher._conn===this?(b=new WebSocketRails.Event(["connection_closed",a]),this.dispatcher.state="disconnected",this.dispatcher.dispatch(b)):void 0},a.prototype.on_error=function(a){var b;return this.dispatcher&&this.dispatcher._conn===this?(b=new WebSocketRails.Event(["connection_error",a]),this.dispatcher.state="disconnected",this.dispatcher.dispatch(b)):void 0},a.prototype.on_message=function(a){return this.dispatcher&&this.dispatcher._conn===this?this.dispatcher.new_message(a):void 0},a.prototype.setConnectionId=function(a){this.connection_id=a},a.prototype.flush_queue=function(){var a,b,c,d;for(d=this.message_queue,b=0,c=d.length;c>b;b++)a=d[b],this.trigger(a);return this.message_queue=[]},a}()}).call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};WebSocketRails.Channel=function(){function b(b,c,d,e,f){var g,h,i;this.name=b,this._dispatcher=c,this.is_private=d,this.on_success=e,this.on_failure=f,this._failure_launcher=a(this._failure_launcher,this),this._success_launcher=a(this._success_launcher,this),h=this.is_private?"websocket_rails.subscribe_private":"websocket_rails.subscribe",this.connection_id=null!=(i=this._dispatcher._conn)?i.connection_id:void 0,g=new WebSocketRails.Event([h,{channel:this.name},{connection_id:this.connection_id}],this._success_launcher,this._failure_launcher),this._dispatcher.trigger_event(g),this._callbacks={},this._token=void 0,this._queue=[]}return b.prototype.is_public=function(){return!this.is_private},b.prototype.destroy=function(){var a,b,c;return this.connection_id===(null!=(c=this._dispatcher._conn)?c.connection_id:void 0)&&(b="websocket_rails.unsubscribe",a=new WebSocketRails.Event([b,{channel:this.name},{connection_id:this.connection_id,token:this._token}]),this._dispatcher.trigger_event(a)),this._callbacks={}},b.prototype.bind=function(a,b){var c;return null==(c=this._callbacks)[a]&&(c[a]=[]),this._callbacks[a].push(b)},b.prototype.unbind=function(a){return delete this._callbacks[a]},b.prototype.trigger=function(a,b){var c;return c=new WebSocketRails.Event([a,b,{connection_id:this.connection_id,channel:this.name,token:this._token}]),this._token?this._dispatcher.trigger_event(c):this._queue.push(c)},b.prototype.dispatch=function(a,b){var c,d,e,f,g,h,i,j,k;if("websocket_rails.channel_token"===a){for(this._token=b.token,i=this._queue,e=0,g=i.length;g>e;e++)d=i[e],this._dispatcher.trigger_event(d);return this._queue=[]}if(null!=this._callbacks[a]){for(j=this._callbacks[a],k=[],f=0,h=j.length;h>f;f++)c=j[f],k.push(c(b));return k}},b.prototype._success_launcher=function(a){return null!=this.on_success?this.on_success(a):void 0},b.prototype._failure_launcher=function(a){return null!=this.on_failure?this.on_failure(a):void 0},b}()}.call(this),function(){WebSocketRails.Connection=function(){function a(a,b){this.url=a,this.dispatcher=b,this.message_queue=[],this.state="connecting",this.connection_id,this.url.match(/^wss?:\/\//)||this.url.match(/^ws?:\/\//)||("https:"===window.location.protocol?this.url="wss://"+this.url:this.url="ws://"+this.url),this._conn=new WebSocket(this.url),this._conn.onmessage=function(a){return function(b){var c;return c=JSON.parse(b.data),a.on_message(c)}}(this),this._conn.onclose=function(a){return function(b){return a.on_close(b)}}(this),this._conn.onerror=function(a){return function(b){return a.on_error(b)}}(this)}return a.prototype.on_message=function(a){return this.dispatcher.new_message(a)},a.prototype.on_close=function(a){var b;return this.dispatcher.state="disconnected",b=(null!=a?a.data:void 0)?a.data:a,this.dispatcher.dispatch(new WebSocketRails.Event(["connection_closed",b]))},a.prototype.on_error=function(a){return this.dispatcher.state="disconnected",this.dispatcher.dispatch(new WebSocketRails.Event(["connection_error",a.data]))},a.prototype.trigger=function(a){return"connected"!==this.dispatcher.state?this.message_queue.push(a):this.send_event(a)},a.prototype.close=function(){return this._conn.close()},a.prototype.setConnectionId=function(a){return this.connection_id=a},a.prototype.send_event=function(a){return this._conn.send(a.serialize())},a.prototype.flush_queue=function(){var a,b,c,d;for(d=this.message_queue,b=0,c=d.length;c>b;b++)a=d[b],this.trigger(a);return this.message_queue=[]},a}()}.call(this),function(){WebSocketRails.Event=function(){function a(a,b,c){var d;this.success_callback=b,this.failure_callback=c,this.name=a[0],this.data=a[1],d=a[2],null!=d&&(this.id=null!=d.id?d.id:65536*(1+Math.random())|0,this.channel=d.channel,this.token=d.token,this.connection_id=d.connection_id,null!=d.success&&(this.result=!0,this.success=d.success))}return a.prototype.is_channel=function(){return null!=this.channel},a.prototype.is_result=function(){return"undefined"!=typeof this.result},a.prototype.is_ping=function(){return"websocket_rails.ping"===this.name},a.prototype.serialize=function(){return JSON.stringify([this.name,this.data,this.meta_data()])},a.prototype.meta_data=function(){return{id:this.id,connection_id:this.connection_id,channel:this.channel,token:this.token}},a.prototype.run_callbacks=function(a,b){return this.success=a,this.result=b,this.success===!0?"function"==typeof this.success_callback?this.success_callback(this.result):void 0:"function"==typeof this.failure_callback?this.failure_callback(this.result):void 0},a}()}.call(this),function(){var a={}.hasOwnProperty,b=function(b,c){function d(){this.constructor=b}for(var e in c)a.call(c,e)&&(b[e]=c[e]);return d.prototype=c.prototype,b.prototype=new d,b.__super__=c.prototype,b};WebSocketRails.HttpConnection=function(a){function c(a,b){this.dispatcher=b,c.__super__.constructor.apply(this,arguments),this._url="http://"+a,this._conn=this._createXMLHttpObject(),this.last_pos=0,this._conn.onreadystatechange=function(a){return function(){return a._parse_stream()}}(this),this._conn.addEventListener("load",this.on_close,!1),this._conn.open("GET",this._url,!0),this._conn.send()}return b(c,a),c.prototype.connection_type="http",c.prototype._httpFactories=function(){return[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}]},c.prototype.close=function(){return this._conn.abort()},c.prototype.send_event=function(a){return c.__super__.send_event.apply(this,arguments),this._post_data(a.serialize())},c.prototype._post_data=function(a){return $.ajax(this._url,{type:"POST",data:{client_id:this.connection_id,data:a},success:function(){}})},c.prototype._createXMLHttpObject=function(){var a,b,c,d,e,f;for(d=!1,b=this._httpFactories(),e=0,f=b.length;f>e;e++){c=b[e];try{d=c()}catch(g){a=g;continue}break}return d},c.prototype._parse_stream=function(){var a,b;return 3===this._conn.readyState?(a=this._conn.responseText.substring(this.last_pos),this.last_pos=this._conn.responseText.length,a=a.replace(/\]\]\[\[/g,"],["),b=JSON.parse(a),this.on_message(b)):void 0},c}(WebSocketRails.AbstractConnection)}.call(this),function(){var a={}.hasOwnProperty,b=function(b,c){function d(){this.constructor=b}for(var e in c)a.call(c,e)&&(b[e]=c[e]);return d.prototype=c.prototype,b.prototype=new d,b.__super__=c.prototype,b};WebSocketRails.WebSocketConnection=function(a){function c(a,b){this.url=a,this.dispatcher=b,c.__super__.constructor.apply(this,arguments),this.url.match(/^wss?:\/\//)?console.log("WARNING: Using connection urls with protocol specified is depricated"):"https:"===window.location.protocol?this.url="wss://"+this.url:this.url="ws://"+this.url,this._conn=new WebSocket(this.url),this._conn.onmessage=function(a){return function(b){var c;return c=JSON.parse(b.data),a.on_message(c)}}(this),this._conn.onclose=function(a){return function(b){return a.on_close(b)}}(this),this._conn.onerror=function(a){return function(b){return a.on_error(b)}}(this)}return b(c,a),c.prototype.connection_type="websocket",c.prototype.close=function(){return this._conn.close()},c.prototype.send_event=function(a){return c.__super__.send_event.apply(this,arguments),this._conn.send(a.serialize())},c}(WebSocketRails.AbstractConnection)}.call(this),module.exports=function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};this.WebSocketRails=function(){function b(b,c){this.url=b,this.use_websockets=null!=c?c:!0,this.connection_stale=a(this.connection_stale,this),this.supports_websockets=a(this.supports_websockets,this),this.dispatch_channel=a(this.dispatch_channel,this),this.unsubscribe=a(this.unsubscribe,this),this.subscribe_private=a(this.subscribe_private,this),this.subscribe=a(this.subscribe,this),this.dispatch=a(this.dispatch,this),this.trigger_event=a(this.trigger_event,this),this.trigger=a(this.trigger,this),this.bind=a(this.bind,this),this.connection_established=a(this.connection_established,this),this.new_message=a(this.new_message,this),this.reconnect=a(this.reconnect,this),this.callbacks={},this.channels={},this.queue={},this.connect()}return b.prototype.connect=function(){return this.state="connecting",this.supports_websockets()&&this.use_websockets?this._conn=new b.WebSocketConnection(this.url,this):this._conn=new b.HttpConnection(this.url,this),this._conn.new_message=this.new_message},b.prototype.disconnect=function(){return this._conn&&(this._conn.close(),delete this._conn._conn,delete this._conn),this.state="disconnected"},b.prototype.reconnect=function(){var a,b,c,d,e;c=null!=(d=this._conn)?d.connection_id:void 0,this.disconnect(),this.connect(),e=this.queue;for(b in e)a=e[b],a.connection_id!==c||a.is_result()||this.trigger_event(a);return this.reconnect_channels()},b.prototype.new_message=function(a){var c,d;return c=new b.Event(a),c.is_result()?(null!=(d=this.queue[c.id])&&d.run_callbacks(c.success,c.data),this.queue[c.id]=null):c.is_channel()?this.dispatch_channel(c):this.dispatch(c),"connecting"===this.state&&"client_connected"===c.name?this.connection_established(c):void 0},b.prototype.connection_established=function(a){return this.state="connected",this._conn.setConnectionId(a.connection_id),this._conn.flush_queue(),null!=this.on_open?this.on_open(a.data):void 0},b.prototype.bind=function(a,b){var c;return null==(c=this.callbacks)[a]&&(c[a]=[]),this.callbacks[a].push(b)},b.prototype.trigger=function(a,c,d,e){var f;return f=new b.Event([a,c,{connection_id:this.connection_id}],d,e),this.queue[f.id]=f,this._conn.trigger(f)},b.prototype.trigger_event=function(a){var b,c;return null==(b=this.queue)[c=a.id]&&(b[c]=a),this._conn.trigger(a),a},b.prototype.dispatch=function(a){var b,c,d,e,f;if(null!=this.callbacks[a.name]){for(e=this.callbacks[a.name],f=[],c=0,d=e.length;d>c;c++)b=e[c],f.push(b(a.data));return f}},b.prototype.subscribe=function(a,c,d){var e;return null==this.channels[a]?(e=new b.Channel(a,this,!1,c,d),this.channels[a]=e,e):this.channels[a]},b.prototype.subscribe_private=function(a,c,d){var e;return null==this.channels[a]?(e=new b.Channel(a,this,!0,c,d),this.channels[a]=e,e):this.channels[a]},b.prototype.unsubscribe=function(a){return null!=this.channels[a]?(this.channels[a].destroy(),delete this.channels[a]):void 0},b.prototype.dispatch_channel=function(a){return null!=this.channels[a.channel]?this.channels[a.channel].dispatch(a.name,a.data):void 0},b.prototype.supports_websockets=function(){return"function"==typeof WebSocket||"object"==typeof WebSocket},b.prototype.connection_stale=function(){return"connected"!==this.state},b.prototype.reconnect_channels=function(){var a,b,c,d,e;d=this.channels,e=[];for(c in d)b=d[c],a=b._callbacks,b.destroy(),delete this.channels[c],b=b.is_private?this.subscribe_private(c):this.subscribe(c),b._callbacks=a,e.push(b);return e},b}()}.call(this);